@model AxisBank.AxisBank_tblAllAccount
@{
    ViewBag.Title = "DepositeOperation";
    Layout = "~/Views/Shared/_LayoutAdmin.cshtml";
}
<script>

var EMessage = '@TempData["NotDeposite"]';
 
  if (EMessage) {
     Swal.fire({
         icon: 'error',
         text: EMessage,
         showCloseButton: true,
         confirmButtonText: 'OK'
     });
 }
</script>

<h3> Deposite Form</h3>
<hr />

<div class="container">
    @using (Html.BeginForm("CheckAccountForDepositeOperation", "Admin", FormMethod.Post, new { @class = "needs-validation", novalidate = "true" }))
    {
        <div class="mb-3 row">
            <div class="col">
                <label class="form-label" for="lblEmail">Account No</label>
                @Html.TextBoxFor(model => model.AccountNo, new { @class = "form-control", required = "required", })
                @Html.ValidationMessageFor(model => model.AccountNo, "", new { @class = "text-danger" })
            </div>
            <div class="col">
                <button class="btn btn-danger" type="submit">Search</button>


            </div>

        </div>
        /*  <div class="mb-3 row">
              <div class="col">

                  @Html.TextBoxFor(model => model.FirstName, new { @class = "form-control", required = "required", })
                  @Html.ValidationMessageFor(model => model.FirstName, "", new { @class = "text-danger" })
              </div>
              <div class="col">
                  @Html.TextBoxFor(model => model.Balance, new { @class = "form-control", required = "required", })
                  @Html.ValidationMessageFor(model => model.Balance, "", new { @class = "text-danger" })

              </div>

          </div>*/
    }
</div>


