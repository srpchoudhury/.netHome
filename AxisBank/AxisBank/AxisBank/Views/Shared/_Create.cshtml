@model AxisBank_tblAllAccount


    <div class="mb-3 row">
        <div class="col">
            @Html.Label("Role Type", new { @class = "form-label" })
            @Html.DropDownListFor(model => model.RoleId, (IEnumerable<SelectListItem>)ViewData["ROLEselectListItems"], new { @class = "form-select", required = "required" })
            @Html.ValidationMessageFor(model => model.RoleId, "", new { @class = "text-danger" })
        </div>
        <div class="col">
            @Html.LabelFor(model => model.FirstName, new { @class = "form-label" })
            @Html.EditorFor(model => model.FirstName, new { @class = "form-control", required = "required" })
            @Html.ValidationMessageFor(model => model.FirstName, "", new { @class = "text-danger" })
        </div>
        <div class="col">
            @Html.LabelFor(model => model.LastName, new { @class = "form-label" })
            @Html.EditorFor(model => model.LastName, new { @class = "form-control", required = "required" })
            @Html.ValidationMessageFor(model => model.LastName, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="mb-3 row">
        <div class="col">
            @Html.LabelFor(model => model.Password, new { @class = "form-label" })
            @Html.EditorFor(model => model.Password, new { @class = "form-control", required = "required" })
            @Html.ValidationMessageFor(model => model.Password, "", new { @class = "text-danger" })
        </div>
        <div class="col">
            @Html.Label("Account Type", new { @class = "form-label" })
            @Html.DropDownListFor(model => model.AccountType, new SelectList(new List<string> { "Savings", "Current", "Zero" }), "Select Account Type", new { @class = "form-select", required = "required" })
            @Html.ValidationMessageFor(model => model.AccountType, "", new { @class = "text-danger" })
        </div>
        <div class="col">
            @Html.LabelFor(model => model.UploadPhoto, new { @class = "form-label" })
            @Html.EditorFor(model => model.UploadPhoto, new { type = "file", @class = "form-control", required = "required" })
            @Html.ValidationMessageFor(model => model.UploadPhoto, "", new { @class = "text-danger" })
        </div>

    </div>

    <div class="mb-3 row">
        <div class="col">
            @Html.LabelFor(model => model.MobileNo, new { @class = "form-label" })
            @Html.EditorFor(model => model.MobileNo, new { @class = "form-control", required = "required" })
            @Html.ValidationMessageFor(model => model.MobileNo, "", new { @class = "text-danger" })
        </div>
        <div class="col">
            @Html.LabelFor(model => model.MaritalStatus, new { @class = "form-label" })
            @Html.DropDownListFor(model => model.MaritalStatus, new SelectList(new List<string> { "Married", "Un Married" }), "Select Status", new { @class = "form-select", required = "required" })
            @Html.ValidationMessageFor(model => model.MaritalStatus, "", new { @class = "text-danger" })
        </div>
        <div class="col">
            @Html.LabelFor(model => model.DateOfBirth, new { @class = "form-label" })
            @Html.EditorFor(model => model.DateOfBirth, new { type = "date", @class = "form-control", required = "required" })
            @Html.ValidationMessageFor(model => model.DateOfBirth, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="mb-3 row">
        <div class="col">
            @Html.Label("ID Card Type", new { @class = "form-label" })
            @Html.DropDownListFor(model => model.IdCardType, new SelectList(new List<string> { "Pancard", "Adhar Card", "Other" }), "Select ID Card Type", new { @class = "form-select", required = "required" })
            @Html.ValidationMessageFor(model => model.IdCardType, "", new { @class = "text-danger" })
        </div>
        <div class="col">
            @Html.LabelFor(model => model.IdCardNumber, new { @class = "form-label" })
            @Html.EditorFor(model => model.IdCardNumber, new { @class = "form-control", required = "required" })
            @Html.ValidationMessageFor(model => model.IdCardNumber, "", new { @class = "text-danger" })
        </div>
        <div class="col">
            @Html.LabelFor(model => model.Email, new { @class = "form-label" })
            @Html.EditorFor(model => model.Email, new { type = "email", @class = "form-control", required = "required" })
            @Html.ValidationMessageFor(model => model.Email, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="mb-3 row">

        <div class="col">
            @Html.LabelFor(model => model.Address, new { @class = "form-label" })
            @Html.EditorFor(model => model.Address, new { @class = "form-control", required = "required" })
            @Html.ValidationMessageFor(model => model.Address, "", new { @class = "text-danger" })
        </div>
        <div class="col">
            @Html.Label("Gender", new { @class = "form-label" })
            <div class="form-check">
                @Html.RadioButtonFor(model => model.Gender, "Male", new { @class = "form-check-input", required = "required" })
                @Html.Label("Male", new { @class = "form-check-label" })
            </div>
            <div class="form-check">
                @Html.RadioButtonFor(model => model.Gender, "Female", new { @class = "form-check-input", required = "required" })
                @Html.Label("Female", new { @class = "form-check-label" })
            </div>
            <div class="form-check">
                @Html.RadioButtonFor(model => model.Gender, "Other", new { @class = "form-check-input", required = "required" })
                @Html.Label("Other", new { @class = "form-check-label" })
            </div>
            @Html.ValidationMessageFor(model => model.Gender, "", new { @class = "text-danger" })
        </div>
        <div class="col">
        </div>

    </div>



    <div class="mb-3 text-center">
        <button type="submit" class="btn btn-primary">Submit</button>
    </div>

    
